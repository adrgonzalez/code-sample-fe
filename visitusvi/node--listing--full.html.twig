{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{#We are now using the radioactivity module to track content#}
{#popularity. When overriding the template, if you only#}
{#use fields, please add the following line to render #}
{#radioactivity somewhere in the template. IMPORTANT TO #}
{#ONLY ADD TO FULL VIEW MODE AND NOT TEASERS ETC:#}
{# {{ content.field_radioactivity }} #}

{%
  set classes = [
  'node--' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--' ~ node.bundle|clean_class ~ '--' ~ view_mode|clean_class : 'node--' ~ node.bundle|clean_class,
  content.field_images.0 or content.field_listing_main_image.0 ? 'has-media' : '',
]
%}
{% include "@mmg9/content/google-maps-script.html.twig" %}

{{ attach_library('mmg9/listing-full') }}
<article data-lat="{{ node.field_lat_long.lat }}" data-lon="{{ node.field_lat_long.lon }}" {{ attributes.addClass(classes) }} data-nid="{{ node.id() }}" data-place-name="{{ place_name }}">
  {{ title_prefix }}
  {# NOTE: If you copy and paste this into another custom node template,
     like node--profile--full.html.twig, for example,
     keep below in to preserve contextual links.
     More info:
     https://www.drupal.org/docs/8/api/menu-api/providing-module-defined-contextual-links#s-rendering-contextual-links
  #}
  {{ title_suffix }}

  <div{{ content_attributes.addClass('node-content') }}>
    <div class="listing-main-info">
      {{ content.field_display_title }}
      {% if listing.places and listing.places.rating %}
        {% set rating = listing.places.rating %}
        {% set ratingCount = listing.places.user_ratings_total %}
        <div class="listing-main-info--rating">
          {% set ratingPercent = (rating / 5) * 100 %}
          <span class="stars-base" aria-label="{{ 'Rated '|t ~ rating ~ ' out of 5'|t }}">
              <span style="width: {{ ratingPercent ~ '%' }}" class="stars-rating"></span>
            </span>
          <span class="rating-description">
              {{ ratingCount ~ ' Google Reviews'|t }}
            </span>
        </div>
      {% endif %}
      <div class="listing-main-info--tags">
        {% if content.field_regions.0 %}
          <span class="island-tag">{{ content.field_regions|field_value }}</span>
        {% endif %}
        {{ content.field_categories }}
      </div>
      <div class="listing-main-info--body">
        <div class="listing--website-numbers">
          {{ content.mmg8_listing_fields_websites }}
          {{ content.mmg8_listing_fields_numbers }}
        </div>
        {{ content.body }}
        {{ content.mmg8_listing_fields_hours }}
      </div>
    </div>
    <div class="listing-location">
      {{ content.mmg8_listing_fields_numbers }}
      {{ content.mmg8_listing_fields_address }}
      {{ content.mmg8_listing_fields_directions }}
      {% if gmap_api_key is not empty %}
        {% if google_place_id is not empty %}
          {% set place_id = 'data-place-id="' ~ google_place_id ~ '"' %}
        {% else %}
          {% set place_id = '' %}
        {% endif %}
        <div class="listing-map listing-map-google" {{ place_id }} id="listing-map-{{ node.id() }}"></div>
      {% else %}
        {{ attach_library('mmg9/leaflet') }}

        <div class="listing-map listing-map-leaflet" id="listing-map-{{ node.id() }}"></div>

      {% endif %}
    </div>
    {% if content.field_images.0 or content.field_profile_images_media %}
      <div class="listing-media">
        <div class="slick-arrows slick-arrows-{{ node.id() }}"></div>
        {% if content.field_images.0 %}
          {{ content.field_images }}
        {% endif %}
      </div>
    {% elseif content.field_listing_main_image.0 or content.field_listing_main_image_media.0  %}
      <div class="listing-media">
        {% if content.field_listing_main_image_media.0 %}
          {{ content.field_listing_main_image_media }}
        {% else %}
          {{ content.field_listing_main_image }}
        {% endif %}
      </div>
    {% endif %}
  </div>

</article>
